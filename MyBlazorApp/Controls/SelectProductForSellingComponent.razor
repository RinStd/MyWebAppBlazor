@inject IViewCategoriesUseCase ViewCategoriesUseCase
@inject IViewProductsByCategoryId ViewProductsByCategoryId

<div class="form-group">
    <label for="category">Category</label>
    <select id="category" @bind="SelectedCategoryId" class="form-control">
        <option selected></option>
        @foreach (var category in categories)
        {
            <option value="@category.CategoryId">@category.Name</option>
        }
    </select>
</div>

@if (productsInCategory != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity Left</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in productsInCategory)
            {
            <tr @onclick="@( () => OnSelectProduct(product))"
                style="@(product.ProductId == selectedProductId?"background-color:beige; cursor:pointer":"cursor:pointer")">
                <td>@product.Name</td>
                <td>@product.Quantity</td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Product> productsInCategory;
    private int selectedProductId;

    [Parameter]
    public EventCallback<Product> OnProductSelected { get; set; }

    private int selectedCategoryId;
    private int SelectedCategoryId
    {
        get
        {
            return selectedCategoryId;
        }
        set
        {
            selectedCategoryId = value;
            productsInCategory = ViewProductsByCategoryId.Execute(value);
            OnSelectProduct(null);
            StateHasChanged();
        }
    }

    private IEnumerable<Category> categories;
    private IEnumerable<Product> products;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        categories = ViewCategoriesUseCase.Execute();
        products = ViewProductsByCategoryId.Execute(selectedCategoryId);
    }

    private void OnSelectProduct(Product product)
    {
        OnProductSelected.InvokeAsync(product);
        if (product != null) selectedProductId = product.ProductId;        
    }
}
